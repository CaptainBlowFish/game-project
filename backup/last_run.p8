pico-8 cartridge // http://www.pico-8.com
version 43
__lua__
--main
--mr duck man!!

function _init()
    players = {}
    add(players,make_player(0))
    --add(players,make_player(1))
    music(0,0,12)

end

function _update()
    foreach(players,update_player)
end

function _draw()
    cls()
    sspr(0,32,40,16,0,9,160,64)
    draw(players[1],true)
    
    for player=2,#players do
        draw(players[player])
    end
    
end

-->8
--player
function make_player(player_num,egg,x,y)
    player = {
        egg=egg or false,
        player_num = player_num,
        x = x or 10,--left
        y = y or 80,--top
        dx = 0,--movement on the x axis
        dy = 1, --movement on the y axis
        max_dx = 2,
        max_dy = 4,
        fall_speed = .2,
        falling = true,
        can_jump = true,
        facing_left = false,
        runing_sprite_1 = false,
        current_sprite = 1,
        map_width = 127,
        map_height = 16,
        bread_collected = 0,
        alive = true,
        update_animations = true, --will halve the frame rate
        cam = {
            x = 0,
            y = 0
        }
    }
    return player
end
-->8
--graphics
function update_sprite(self)
    if self.dx >0 then 
        self.runing_sprite_1 = not self.runing_sprite_1
        if self.runing_sprite_1 then
            self.current_sprite = 3
        else
            self.current_sprite = 2
        end
    else
        self.current_sprite = 1
    end
    if (self.egg) self.current_sprite+=33
end

function move_cam(self)
    screen_size = 128
    self.cam.x = self.x - screen_size/2
    self.cam.y = 0

    if (self.cam.x < 0) self.cam.x = 0
end

function draw(self,draw_map)
    draw_map = draw_map or false
    if self.alive then
        if draw_map then
            draw_ui(self)
            move_cam(self)
            camera(self.cam.x, self.cam.y)
            mapdraw(1,0,0,0,self.map_width,self.map_height)
        end
        pal(3,3+self.player_num)
        spr(self.current_sprite,self.x,self.y,1,1,self.facing_left,self.falling)
        pal()
        if self.update_animations then
            update_sprite(self)
        end
        self.update_animations = not self.update_animations
    else
        print("player",self.cam.x,self.cam.y,8)
        print(self.player_num,self.cam.x + 26,self.cam.y,8)
        print("died",self.cam.x+32,self.cam.y,8)
    end
end

function draw_ui(self)
    local cam = self.cam
    camera()
    rectfill(0,0,127,9,8)
    spr(33)
    print(self.bread_collected,8,0,7)
    camera(cam.x,cam.y)

end
-->8
--movement
function move(self, left)
    --has the player move left or right
    if left then
        self.facing_left = true
    else
        self.facing_left = false
    end
    self.dx += .1
    if self.dx > self.max_dx then
        self.dx = self.max_dx
    end

end

function jump(self)
    --has the player jump
    if not self.falling then
        self.dy += .5
        if self.dy > self.max_dy then
            self.falling = true
            self.can_jump = false
        end
    end 
end

function handle_map_collision(self)
    --handles the player colliding with the map
    x = mid(self.x,self.x+8)/8 --divides by 8 to get the position of the player relative to the map
    y = self.y/8 -- a map square is an 8x8 square of pixels
    if self.facing_left then
        x = ceil(x)
    else
        x = ceil(x)+1
    end
    if self.falling then
        y = ceil(y)
    else
        y = flr(y)
    end
    if fget(mget(x,y),0) then 
        if self.falling then
            self.can_jump = true
            self.falling = false
            self.dy = 0
            self.y = (y-1)*8
        elseif self.dx> 0 then
            self.dx = 0
            if self.facing_left then
                self.x = (x)*8
            else 
                self.x = (x-2)*8
            end
        end
    elseif fget(mget(x,y),2) then
        self.alive = false
    elseif fget(mget(x,y),3) then 
        mset(x,y,0)
        sfx(0)
        self.bread_collected += 1
        if self.bread_collected ==3 then
            add(players,make_player(1,true,self.x,self.y))
        end
    end

end

function update_player(self)
    if self.alive then
        --jump 
        if self.can_jump and (btn(❎,self.player_num) or btn(⬆️,self.player_num)) then
            jump(self)
        else
            if self.dy>0 then
                self.falling = true
                self.dy = 1
        elseif self.facing_left then
            if not fget(mget(ceil((self.x+5)/8),flr(self.y/8)+1),1) and not self.falling then
                self.falling = true
                self.dy  = self.fall_speed
            end
        elseif not self.facing_left then
            if not fget(mget(ceil((self.x+1)/8),flr(self.y/8)+1),1) and not self.falling then
                self.falling = true
                self.dy  = self.fall_speed
            end
            end
        end

        if self.falling then
            self.y += self.dy
        else
            self.y -= self.dy
        end


        if btn(0,self.player_num) then
            
            move(self, true)

        elseif btn(1,self.player_num) then
            move(self, false)
        else
            self.dx -= .1
            if (self.dx < 0) self.dx = 0
        end

        if self.facing_left then
            self.x -= self.dx
        else
            self.x += self.dx
        end

        handle_map_collision(self)
    else
        del(players,self)
        if #players < 1 then 
            _init()
        end
    end
end

-->8
--notes
--[[flag meanings 
0 = can stand on
1 = can't jump through
2 = kills the player
3 = collectable
]]--
__gfx__
00000000000003000000030000000300c11c11c133bb3bb3444444446655555600077750b333333b000000000000000000000000000000000000000000000000
0000000000003330000033300000333011c11c113b33b33374f7ff47555666660077775033bbbb3b000000000000000000000000000000000000000000000000
007007000000371a4000371a4000371a1cc1cc1c33333333fff44fff56665555076767503bb3bb33000000000000000000000000000000000000000000000000
000770000444433a4474333a4474333a1c11c11c333333444444747466555666777777503b333bb3000000000000000000000000000000000000000000000000
00077000477744300477443004774430111c11c144434444474777ff65566665076667503b333bb3000000000000000000000000000000000000000000000000
0070070000444400004449009944440011cc1cc14f44444ffffff44465666555007777503bb33bb3000009990000000000000000000000000000000000000000
000000000009900009009900900900001cc11c11f444f4f4f444744755665566000077503bbbbb33000009990000000000000000000000000000000000000000
000000000099990009900000000990001cc1cc1cffffffff747fffff5666566600000050b333b33b000009990000000000000000000000000000000000000000
0000000000000000000000000000000042244422000000000000000000000000000000504ff4ff4f000000000000000000000000000000000000000000000000
0000000000000000000000000000000042242224000000000000000000000000000000504ff4ff44000000000000000000000000000000000000000000000000
00000000000000000000000000000000224424440000000000000000000000000000005044f44ff4000000000000000000000000000000000000000000000000
000000000000000000000000000000002442242200000000000000000000000000000050f4ff44ff000000000000000000000000000000000000000000000000
000000000000000000000080000000002422442200000000000000000000000000000050f44ff4ff000000000000000000000000000000000000000000000000
000000000bb000b80b0000b00000b0004422422400000000000000000000000000000050ff4ff4ff000000000000000000000000000000000000000000000000
00000000bbbbbbb00bbb0bb000bb0bbb42244224000000000000000000000000000000504f4ff44f000000000000000000000000000000000000000000000000
00000000b000b0000000b0000b00000842242244000000000000000000000000000000504f44ff4f000000000000000000000000000000000000000000000000
00000000000040000007700000077000000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000004f4000077770000777700007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004fff400777677007776770077767700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000004ff4ff40777767007777670077776700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004f4fff400777777007777770077777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000004ffff400007777000f777700007777f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000004ff400000f00f000ff00f0000f00ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004400000ff00ff000000ff00ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76767600000000000000000000077600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777760767760000000000000777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77676760776676000000000007777760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77070760776060000000000077767777760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66000600776000000000000077606677660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000776077600776676000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77776000000000000000776000007767777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777760000000000000776000007677767600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77667776000000000000776000000776777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77606776000000000000776076000660776076000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77600676000000000000776776000007760777600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77600076776000007760777760000006607766760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77600776776076776676777600000000077600760000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77607760776076776060777600000000066007600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777760776676776076776760000000000076000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77776600777760077760770676000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000004030303080108000000000000202020040000000800000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000909000000000505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001919000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001919000021000021000021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000001919000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050505050505050505050505050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000000001c0501c0501d0501e0501f050200502105022056220572305723057230572305723057230572305722057280562805628056280572805728057280502c0502e0502f0502f050300502f0502d0502a050
0010002036550365502a400365502e40035550334003455035400325503155000000305502e550000002d5502c550000002b5502a55028550275502755000000285502a5502e5503255034500355503855000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
03 01424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144
00 41424144

